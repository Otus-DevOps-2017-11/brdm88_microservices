---
version: '3.3'

services:
# Monitoring
  prometheus:
    image: ${USERNAME}/prometheus:${PROMETHEUS_VERSION:-latest}
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    networks:
      - net_frontend
      - net_backend
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    deploy:
      mode: global
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - net_backend
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'

  mongodb-exporter:
    image: ${USERNAME}/mongodb-exporter:${MONGODB_EXPORTER_VERSION:-latest}
    networks:
      - net_backend
    command: ["-mongodb.uri", "post_db"]
  
  blackbox-exporter:
    image: prom/blackbox-exporter:${BLACKBOX_EXPORTER_VERSION:-latest}
    networks:
      - net_frontend

  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - net_backend

  grafana:
    image: grafana/grafana:5.0.0
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - net_backend
  
  alertmanager:
    image: ${USERNAME}/alertmanager:${ALERTMANAGER_VERSION:-latest}
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:9093
    networks:
      - net_backend


volumes:
  prometheus_data:
  grafana_data:

networks:
  net_frontend:
  net_backend:
